version: "3.7"

services: 
  two-factor-api:
    restart: always
    # if docker file is in another folder set context: ./server
    # build this container with my Dockerfile
    # but if i have a dockerfile elsewhere or with a custom name
    # declare it at the dockerfile section
    build: 
      context: .
      dockerfile: Dockerfile
    volumes: 
      # do not try overwrite this folder app/node_modules
      # in the container with the one in our directory
      - /app/node_modules
      # map current folder/directory to /app inside the container
      # This is a must for a development environment in order to update the container whenever a change to the source code is made. Without this, you would have to rebuild the image each time you make a change to the code.
      - .:/app
    ports: 
      - 5000:5000
    depends_on: 
      - mongodb
    environment: 
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb

  mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017  
    environment: 
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes: 
      - mongodb-data:/data/db
 

  mongo-express:
    image: mongo-express
    restart: always
    depends_on: 
      - mongodb   
    ports: 
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD} 
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123456
    volumes:
      - mongodb-data  
    
        
volumes:
  mongodb-data:
    driver: local




